#!/usr/bin/perl
use strict;
use warnings;
use GitGraph;
use Getopt::Long;

GetOptions( \my %conf, 'debug!', 'verbose!' )
    or die "Usaage: $0 [ --debug ] [ --verbose ]";

# prepare some basic stuff
my $depth = shift || 0;
init('sierpinski') if !-e 'sierpinski';
set_git_repo('sierpinski');

# a "node" is actually [ commit id, parent count ]
#
# in the following square:
#
#    B   C
#      \ |
#    A - N
#
# N is created to have the following parents:
# - A if A exists and has < 2 parents
# - B if B exists and has < 3 parents
# - C if C has < 3 parents
#
# if no parent is found, the node is not created

sub sierpinski {
    my ( $branch, $prev ) = @_;

    # empty row
    return [ [ node($branch), 0 ] ] if !$prev || !@$prev;

    my $this;
    for my $i ( 0 .. @$prev ) {
        my @parents;
        push @parents, $this->[ $i - 1 ][0], $prev->[ $i - 1 ][0]
            if $i && $prev->[$i -1][0] && $prev->[ $i - 1 ][1] < 3;
        push @parents, $prev->[$i][0] if $prev->[$i] && $prev->[$i][1] < 3;

        @parents = grep {$_} @parents;
        push @$this,
            [ ( @parents ? node( $branch, @parents ) : '' ), 0 + @parents ];
    }
    return $this;
}

my $row = [];
my $rows = 1 + ( $depth ? 2**( $depth - 1 ) : 0 );
$row = sierpinski( "sierpinski-$depth", $row ) for 1 .. $rows;

